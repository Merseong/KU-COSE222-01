
testvec:     file format elf32-bigmips
testvec
architecture: mips:3000, flags 0x00000012:
EXEC_P, HAS_SYMS
start address 0x00000000

Program Header:
    LOAD off    0x00000060 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000800 memsz 0x00000800 flags rwx
private flags = 1: [no abi set] [mips1] [not 32bitmode] [noreorder]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000e8  00000000  00000000  00000060  2**4
                  CONTENTS, ALLOC, LOAD, CODE
  1 .data         00000400  00000400  00000400  00000460  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  2 .reginfo      00000018  00000000  00000000  00000860  2**2
                  CONTENTS, READONLY, LINK_ONCE_SAME_SIZE
  3 .pdr          00000040  00000000  00000000  00000878  2**2
                  CONTENTS, READONLY
  4 .debug_abbrev 0000007a  00000000  00000000  000008b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000134  00000000  00000000  00000932  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000045  00000000  00000000  00000a66  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000048  00000000  00000000  00000aac  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000056  00000000  00000000  00000af4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_pubnames 0000002b  00000000  00000000  00000b4a  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000020  00000000  00000000  00000b75  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .comment      00000012  00000000  00000000  00000b95  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000400 l    d  .data	00000000 .data
00000000 l    d  .reginfo	00000000 .reginfo
00000000 l    d  .pdr	00000000 .pdr
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .comment	00000000 .comment
00000400 l       .data	00000000 stack
00000000 l    df *ABS*	00000000 SevenSeg.c
000000a8 g     F .text	00000040 display
00000010 g     F .text	00000098 SevenSeg



Disassembly of section .text:

00000000 <SevenSeg-0x10>:
   0:	3c1d0000 	lui	sp,0x0
   4:	27bd0400 	addiu	sp,sp,1024
   8:	08000004 	j	10 <SevenSeg>
   c:	00000000 	nop

00000010 <SevenSeg>:
#include "SevenSeg.h"

void display (int);

int SevenSeg()
{
  10:	27bdffe0 	addiu	sp,sp,-32
  14:	afbf001c 	sw	ra,28(sp)
  18:	afbe0018 	sw	s8,24(sp)
  1c:	03a0f021 	move	s8,sp
unsigned int i;

while (1){

     display(SEG_5);
  20:	24040012 	li	a0,18
  24:	0c00002a 	jal	a8 <display>
  28:	00000000 	nop
     for (i=0; i<0xFFFFF; i++) ;
  2c:	afc00010 	sw	zero,16(s8)
  30:	08000012 	j	48 <SevenSeg+0x38>
  34:	00000000 	nop
  38:	8fc20010 	lw	v0,16(s8)
  3c:	00000000 	nop
  40:	24420001 	addiu	v0,v0,1
  44:	afc20010 	sw	v0,16(s8)
  48:	8fc30010 	lw	v1,16(s8)
  4c:	3c02000f 	lui	v0,0xf
  50:	3442ffff 	ori	v0,v0,0xffff
  54:	0062102b 	sltu	v0,v1,v0
  58:	1440fff7 	bnez	v0,38 <SevenSeg+0x28>
  5c:	00000000 	nop

     display(SEG_A);
  60:	24040008 	li	a0,8
  64:	0c00002a 	jal	a8 <display>
  68:	00000000 	nop
     for (i=0; i<0xFFFFF; i++) ;
  6c:	afc00010 	sw	zero,16(s8)
  70:	08000022 	j	88 <SevenSeg+0x78>
  74:	00000000 	nop
  78:	8fc20010 	lw	v0,16(s8)
  7c:	00000000 	nop
  80:	24420001 	addiu	v0,v0,1
  84:	afc20010 	sw	v0,16(s8)
  88:	8fc30010 	lw	v1,16(s8)
  8c:	3c02000f 	lui	v0,0xf
  90:	3442ffff 	ori	v0,v0,0xffff
  94:	0062102b 	sltu	v0,v1,v0
  98:	1440fff7 	bnez	v0,78 <SevenSeg+0x68>
  9c:	00000000 	nop
}
  a0:	08000008 	j	20 <SevenSeg+0x10>
  a4:	00000000 	nop

000000a8 <display>:
return 0;
}


void display (int num)
{
  a8:	27bdfff0 	addiu	sp,sp,-16
  ac:	afbe0008 	sw	s8,8(sp)
  b0:	03a0f021 	move	s8,sp
  b4:	afc40010 	sw	a0,16(s8)
	unsigned int * seg0_addr = (unsigned int *) SevenSeg0;
  b8:	3c02ffff 	lui	v0,0xffff
  bc:	3442200c 	ori	v0,v0,0x200c
  c0:	afc20000 	sw	v0,0(s8)

	*seg0_addr = num;
  c4:	8fc30010 	lw	v1,16(s8)
  c8:	8fc20000 	lw	v0,0(s8)
  cc:	00000000 	nop
  d0:	ac430000 	sw	v1,0(v0)

	return;
}
  d4:	03c0e821 	move	sp,s8
  d8:	8fbe0008 	lw	s8,8(sp)
  dc:	27bd0010 	addiu	sp,sp,16
  e0:	03e00008 	jr	ra
  e4:	00000000 	nop
