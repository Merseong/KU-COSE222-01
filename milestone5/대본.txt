안녕하세요. 2018320205 신대성입니다.
HEX에 1234를 띄우기 위한 과정을 간략하게 설명하겠습니다.

우선 CPU에서 바꿔준 곳은 aluop입니다. EX 스테이지에 funct와 aluop 외에도 jump를 들어오게 하고 처리 후 다시 나가게 하여 점프를 수행하도록 하였습니다.
또, 브랜치도 ex control에 들어가도록 해줬습니다.
데이터패쓰에서는 pcsrc를 EX 스테이지에 처리하도록 했습니다.
또, pcsrc가 0이 아니거나 jump를 한다면 flush control을 바꿔 플러시가 수행되도록 만들었습니다.
플러시는 if에서 id로 가는 플립플롭에 작동하여 if와 id를 리셋시켜줍니다.

다음은 모델심 시뮬레이션 결과입니다.
그 전에 주어진 어셈블리 코드를 보면, 총 7개의 브랜치 혹은 점프가 존재합니다.
이중 에러 디텍션을 제외하면 메인에서 쭉 내려가다가 HEX3로 넘어간 뒤
HEX3에서 HEX0를 호출하고 다시 돌아와 forever로 들어가는 구조입니다.
이제 시뮬레이션을 보면, 먼저 HEX들에는 정상적인 값이 들어가는 걸 확인할 수 있습니다.
그리고 80일때 들어간 점프가 88 다음에 c4로 넘어가는 것으로 HEX3으로 넘어갔다는 것을 확인할 수 있습니다.
dc에서 들어간 점프 앤 링크가 HEX0가 있는 8c로 넘어가고,
bc의 점프 레지스터로 돌아와 forever가 있는 e4 e8에서 반복되는 것을 볼 수 있습니다.

지금까지 2018320205 신대성이었습니다. 감사합니다.